{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/HOC/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/Input.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","setAuthUserDataAfterRender","DialogItem","path","id","className","s","dialog","src","avatar","activeClassName","active","name","Message","message","Input","initialValues","messageText","onSubmit","values","a","resetForm","text","addMessage","placeholder","type","inputWindow","inputButton","alt","inputImg","Dialogs","dialogsElements","DialogsPage","dialogs","map","d","messagesElements","messages","m","h1","dialogsItems","chat","compose","dialogsPage","dispatch","addMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,GAAK,oBAAoB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,YAAc,6BAA6B,SAAW,0BAA0B,KAAO,sBAAsB,OAAS,0B,8ICK7XC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAIlC,OAAKC,KAAKC,MAAMN,OAEV,kBAACG,EAAcE,KAAKC,OAFK,kBAAC,IAAD,CAAUC,GAAG,eAJV,GAEXC,IAAML,WAUtC,OADqCM,YAAQX,EAA4B,CAACY,gCAArCD,CAAkEL,K,4GCP5FO,EAXI,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAKX,EAAMY,OAAQJ,UAAWC,IAAEG,SACrC,kBAAC,IAAD,CAASX,GAAIK,EAAMO,gBAAiBJ,IAAEK,QAAQ,8BAAOd,EAAMe,SCGxDC,G,OAVC,SAAChB,GAEb,OACI,yBAAKQ,UAAWR,EAAMO,IACjBP,EAAMiB,W,gCC+BJC,EAjCD,SAAClB,GAMX,OACI,6BACI,kBAAC,IAAD,CACImB,cAAe,CACXC,YAAa,IAEjBC,SAAQ,uCAAE,WAAOC,EAAP,kBAAAC,EAAA,sDAAeC,EAAf,EAAeA,UACK,IAAtBF,EAAOF,cAXTK,EAYaH,EAAOF,YAXlCpB,EAAM0B,WAAWD,GAYDD,EAAU,KAHR,iCAVL,IAACC,IAUI,OAAF,yDASR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlB,GAAI,cAAeQ,KAAK,cACxBY,YAAY,6HAAyBC,KAAK,OAAOpB,UAAWC,IAAEoB,cAErE,4BAAQD,KAAM,SAAUpB,UAAWC,IAAEqB,aAAa,yBAAKnB,IAAK,8CAA+CoB,IAAK,SAAUvB,UAAWC,IAAEuB,gBCF5IC,EAtBC,SAACjC,GAEb,IAAIkC,EAAkBlC,EAAMmC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMR,GAAI+B,EAAE/B,GAAIK,OAAQ0B,EAAE1B,YACnG2B,EAAmBvC,EAAMmC,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASV,GAAIkC,EAAElC,QAE9F,OACI,yBAAKC,UAAWC,IAAE2B,SACd,wBAAI5B,UAAWC,IAAEiC,IAAjB,WACA,yBAAKlC,UAAWC,IAAEkC,cACbT,GAEL,yBAAK1B,UAAWC,IAAE+B,UACd,yBAAKhC,UAAWC,IAAEmC,MACjBL,GAGD,kBAAC,EAAD,CAAOb,WAAY1B,EAAM0B,gB,iCCA1BmB,sBAAQjD,IAAkBO,aAdnB,SAACV,GACnB,MAAO,CACH0C,YAAa1C,EAAMqD,YACnBpD,OAAQD,EAAME,KAAKD,WAGF,SAACqD,GACtB,MAAO,CACHrB,WAAY,SAACD,GACTsB,EAASC,YAAkBvB,SAKxBoB,CAAwEZ","file":"static/js/5.1532f557.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3-A6i\",\"h1\":\"Dialogs_h1__2TwMh\",\"dialogItems\":\"Dialogs_dialogItems__agi_P\",\"dialog\":\"Dialogs_dialog__1x9jK\",\"active\":\"Dialogs_active__3yH0I\",\"messages\":\"Dialogs_messages__39595\",\"inputButton\":\"Dialogs_inputButton__TQCBB\",\"inputWindow\":\"Dialogs_inputWindow__3z1iJ\",\"inputImg\":\"Dialogs_inputImg__13Vev\",\"chat\":\"Dialogs_chat__TXGkc\",\"avatar\":\"Dialogs_avatar__2xgLP\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserDataAfterRender} from \"../../redux/authReducer\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n             if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect, {setAuthUserDataAfterRender})(RedirectComponent)\r\n    return connectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.avatar} className={s.avatar}/>\r\n            <NavLink to={path} activeClassName={s.active}><span>{props.name}</span></NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={props.id}>\r\n            {props.message}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n    let addMessage = (text) => {\r\n        props.addMessage(text);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    messageText: ''\r\n                }}\r\n                onSubmit={async (values,{resetForm}) => {\r\n                    if (values.messageText != '') {\r\n                        addMessage(values.messageText)\r\n                        resetForm({})\r\n                    }\r\n                }\r\n                }\r\n\r\n            >\r\n                <Form>\r\n                    <Field id={\"messageText\"} name=\"messageText\"\r\n                           placeholder=\"Введите ваше сообщение\" type=\"text\" className={s.inputWindow}/>\r\n\r\n                    <button type={\"submit\"} className={s.inputButton}><img src={'https://rusprom.group/_nuxt/img/52f64b4.png'} alt={'Submit'} className={s.inputImg}/></button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input\r\n\r\n/*\r\n\r\n\r\n<div className={s.inputButton}>\r\n    <input type='text' onChange={onMessageChange} ref={newMessage} className={s.inputWindow} placeholder='Введите ваше сообщение...' value={props.newMessageText} />\r\n\r\n</div>\r\n<div> <input type='image' onClick={addMessage} src='https://rusprom.group/_nuxt/img/52f64b4.png' alt='Submit' className={s.inputImg}/></div>*/\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Input from \"./Message/Input\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.DialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar}/> );\r\n    let messagesElements = props.DialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>) ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <h1 className={s.h1}>Dialogs</h1>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.chat}>\r\n                {messagesElements}</div>\r\n\r\n\r\n                <Input addMessage={props.addMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(addMessageCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs);\r\n"],"sourceRoot":""}