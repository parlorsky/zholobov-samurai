{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Common/Popup/Popup.jsx","components/Settings/Settings.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Popup","isActive","setActive","children","className","onClick","e","stopPropagation","Settings","useState"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iCILtG,2BAiBeC,IAdD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SAChC,OAGI,yBAAKC,UAAWH,EAAW,eAAiB,QAASI,QAAS,kBAAMH,GAAU,KAC1E,yBAAKE,UAAWH,EAAW,sBAAsB,eAAgBI,QAAS,SAAAC,GAAC,OAAIA,EAAEC,oBAC5EJ,M,mICQFK,UAbE,WAAO,IAAD,EAEWC,oBAAS,GAFpB,mBAEZR,EAFY,KAEFC,EAFE,KAInB,OAEI,6BACI,4BAAQG,QAAS,kBAAMH,GAAU,KAAjC,8EACA,kBAAC,IAAD,CAAOD,SAAUA,EAAUC,UAAWA,GAAtC","file":"static/js/4.1221541a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport './Popup.css'\r\n\r\nconst Popup = ({isActive, setActive,children}) => {\r\n    return (\r\n\r\n\r\n        <div className={isActive ? 'popup active' : 'popup'} onClick={() => setActive(false)}>\r\n            <div className={isActive ? 'popupContent active':'popupContent'} onClick={e => e.stopPropagation() }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup","import React, {useState} from \"react\";\r\nimport s from \"./Settings.module.css\"\r\nimport Popup from \"../Common/Popup/Popup\";\r\n\r\nconst Settings = () => {\r\n\r\n    const [isActive, setActive] = useState(false)\r\n\r\n    return(\r\n\r\n        <div>\r\n            <button onClick={() => setActive(true)}> открыть попап</button>\r\n            <Popup isActive={isActive} setActive={setActive}>  v</Popup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;"],"sourceRoot":""}