{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/Input.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","props","path","id","className","s","dialog","src","avatar","to","activeClassName","active","name","Message","message","Input","initialValues","messageText","onSubmit","values","a","resetForm","text","addMessage","placeholder","type","inputWindow","inputButton","alt","inputImg","Dialogs","dialogsElements","DialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","chat","compose","withAuthRedirect","connect","state","dialogsPage","isAuth","auth","dispatch","addMessageCreator","module","exports"],"mappings":"kLAeeA,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAKN,EAAMO,OAAQJ,UAAWC,IAAEG,SACrC,kBAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAEM,QAAQ,8BAAOV,EAAMW,SCGxDC,G,OAVC,SAACZ,GAEb,OACI,yBAAKG,UAAWH,EAAME,IACjBF,EAAMa,W,+BC+BJC,EAjCD,SAACd,GAMX,OACI,6BACI,kBAAC,IAAD,CACIe,cAAe,CACXC,YAAa,IAEjBC,SAAQ,uCAAE,WAAOC,EAAP,kBAAAC,EAAA,sDAAeC,EAAf,EAAeA,UACK,IAAtBF,EAAOF,cAXTK,EAYaH,EAAOF,YAXlChB,EAAMsB,WAAWD,GAYDD,EAAU,KAHR,iCAVL,IAACC,IAUI,OAAF,yDASR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnB,GAAI,cAAeS,KAAK,cACxBY,YAAY,6HAAyBC,KAAK,OAAOrB,UAAWC,IAAEqB,cAErE,4BAAQD,KAAM,SAAUrB,UAAWC,IAAEsB,aAAa,yBAAKpB,IAAK,8CAA+CqB,IAAK,SAAUxB,UAAWC,IAAEwB,gBCF5IC,EAtBC,SAAC7B,GAEb,IAAI8B,EAAkB9B,EAAM+B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMT,GAAIgC,EAAEhC,GAAIK,OAAQ2B,EAAE3B,YACnG4B,EAAmBnC,EAAM+B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASX,GAAImC,EAAEnC,QAE9F,OACI,yBAAKC,UAAWC,IAAE4B,SACd,uCACA,yBAAK7B,UAAWC,IAAEkC,cACbR,GAEL,yBAAK3B,UAAWC,IAAEgC,UACd,yBAAKjC,UAAWC,IAAEmC,MACjBJ,GAGD,kBAAC,EAAD,CAAOb,WAAYtB,EAAMsB,gB,gCCA1BkB,sBAAQC,IAAkBC,aAdnB,SAACC,GACnB,MAAO,CACHZ,YAAaY,EAAMC,YACnBC,OAAQF,EAAMG,KAAKD,WAGF,SAACE,GACtB,MAAO,CACHzB,WAAY,SAACD,GACT0B,EAASC,YAAkB3B,SAKxBmB,CAAwEX,I,mBCrBvFoB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,YAAc,6BAA6B,SAAW,0BAA0B,KAAO,sBAAsB,OAAS","file":"static/js/3.0500b83e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.avatar} className={s.avatar}/>\r\n            <NavLink to={path} activeClassName={s.active}><span>{props.name}</span></NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={props.id}>\r\n            {props.message}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n    let addMessage = (text) => {\r\n        props.addMessage(text);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    messageText: ''\r\n                }}\r\n                onSubmit={async (values,{resetForm}) => {\r\n                    if (values.messageText != '') {\r\n                        addMessage(values.messageText)\r\n                        resetForm({})\r\n                    }\r\n                }\r\n                }\r\n\r\n            >\r\n                <Form>\r\n                    <Field id={\"messageText\"} name=\"messageText\"\r\n                           placeholder=\"Введите ваше сообщение\" type=\"text\" className={s.inputWindow}/>\r\n\r\n                    <button type={\"submit\"} className={s.inputButton}><img src={'https://rusprom.group/_nuxt/img/52f64b4.png'} alt={'Submit'} className={s.inputImg}/></button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input\r\n\r\n/*\r\n\r\n\r\n<div className={s.inputButton}>\r\n    <input type='text' onChange={onMessageChange} ref={newMessage} className={s.inputWindow} placeholder='Введите ваше сообщение...' value={props.newMessageText} />\r\n\r\n</div>\r\n<div> <input type='image' onClick={addMessage} src='https://rusprom.group/_nuxt/img/52f64b4.png' alt='Submit' className={s.inputImg}/></div>*/\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Input from \"./Message/Input\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.DialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar}/> );\r\n    let messagesElements = props.DialogsPage.messages.map(m => <Message message={m.message} id={m.id}/>) ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <h1>Dialogs</h1>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.chat}>\r\n                {messagesElements}</div>\r\n\r\n\r\n                <Input addMessage={props.addMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(addMessageCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3-A6i\",\"dialogItems\":\"Dialogs_dialogItems__agi_P\",\"dialog\":\"Dialogs_dialog__1x9jK\",\"active\":\"Dialogs_active__3yH0I\",\"messages\":\"Dialogs_messages__39595\",\"inputButton\":\"Dialogs_inputButton__TQCBB\",\"inputWindow\":\"Dialogs_inputWindow__3z1iJ\",\"inputImg\":\"Dialogs_inputImg__13Vev\",\"chat\":\"Dialogs_chat__TXGkc\",\"avatar\":\"Dialogs_avatar__2xgLP\"};"],"sourceRoot":""}