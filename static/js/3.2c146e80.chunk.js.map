{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/HOC/withAuthRedirect.jsx","assets/images/userpng.jpg","components/Common/Popup/Popup.jsx","components/Profile/Profile.module.css","components/Profile/ProfileInfo/Form.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/StatusHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","setAuthUserDataAfterRender","module","exports","Popup","isActive","setActive","children","className","onClick","e","stopPropagation","StatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","currentTarget","onBlur","type","autoFocus","ProfileDataForm","deactivateEdit","saveProfile","userPage","formPaste","fieldName","s","inputGroup","placeholder","name","id","htmlFor","reqMark","validationSchema","yup","shape","aboutMe","typeError","required","lookingForAJobDescription","initialValues","lookingForAJob","fullName","contacts","facebook","github","instagram","twitter","vk","youtube","onSubmit","values","console","log","then","errors","touched","contactsAlert","validateAlert","content","rightColumn","leftColumn","secondButton","ProfileData","about","keys","map","key","contactTitle","contactValue","userId","Contact","ProfileInfo","isOwner","saveAvatar","Preloader","info","avatar1","src","photos","large","userpng","avatar","avatarChanger","setPhotoHide","target","files","setPhoto","editProfile","article","Name","Post","postId","post","post_picture","post_picture_size","post1","message","remove","likes","like_style","like_png_width","MyPosts","memo","postsElements","posts","p","deletePost","likesCount","input_posts","myposts","input","postText","a","resetForm","text","addPostActionCreator","input_text","input1","input_button","MyPostsContainer","profilePage","Profile","uppic1","uppic","ProfileContainer","profileThunk","getStatusThunk","match","params","authorizedUserId","history","refreshProfile","statusText","updateStatusThunk","prevProps","prevState","snapshot","compose","withRouter","updateProfileSuccess","setUserProfile"],"mappings":"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","file":"static/js/3.2c146e80.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserDataAfterRender} from \"../../redux/authReducer\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n             if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect, {setAuthUserDataAfterRender})(RedirectComponent)\r\n    return connectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/userpng.9ec83b2a.jpg\";","import React from \"react\";\r\nimport './Popup.css'\r\n\r\nconst Popup = ({isActive, setActive,children}) => {\r\n    return (\r\n\r\n\r\n        <div className={isActive ? 'popup active' : 'popup'} onClick={() => setActive(false)}>\r\n            <div className={isActive ? 'popupContent active':'popupContent'} onClick={e => e.stopPropagation() }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__BH8ho\",\"uppic1\":\"Profile_uppic1__HSCPs\",\"uppic\":\"Profile_uppic__zB8a9\",\"info\":\"Profile_info__1wP1v\",\"avatar1\":\"Profile_avatar1__3kTcD\",\"avatar\":\"Profile_avatar__2IS32\",\"setPhotoHide\":\"Profile_setPhotoHide__futwR\",\"article\":\"Profile_article___dddC\",\"Name\":\"Profile_Name__3_HBn\",\"about\":\"Profile_about__2QNWa\",\"contacts\":\"Profile_contacts__2UMmh\",\"profileStatus\":\"Profile_profileStatus__1u__2\",\"avatarChanger\":\"Profile_avatarChanger__1SYHl\",\"setPhoto\":\"Profile_setPhoto__1_WrA\",\"editProfile\":\"Profile_editProfile__24SSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsAlert\":\"Form_contactsAlert__7A1UD\",\"secondButton\":\"Form_secondButton__3Cqw4\",\"validateAlert\":\"Form_validateAlert__wQJsm\",\"content\":\"Form_content__1TlpR\",\"leftColumn\":\"Form_leftColumn__jrXNs\",\"rightColumn\":\"Form_rightColumn__3dIcc\",\"inputGroup\":\"Form_inputGroup__2qy7r\",\"reqMark\":\"Form_reqMark__ARO8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__wCaO0\",\"input_posts\":\"MyPosts_input_posts__ROaMT\",\"myposts\":\"MyPosts_myposts__2vFGY\",\"input\":\"MyPosts_input__1_0aw\",\"input_text\":\"MyPosts_input_text__3ix5j\",\"input1\":\"MyPosts_input1__2YhtO\",\"input_button\":\"MyPosts_input_button__2lai8\",\"post\":\"MyPosts_post__1MDQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2HgyF\",\"post_picture\":\"Post_post_picture__1HeqV\",\"post_picture_size\":\"Post_post_picture_size__3QCgu\",\"post1\":\"Post_post1__u0X1o\",\"likes\":\"Post_likes__2RSVO\",\"like_png_width\":\"Post_like_png_width__2KrTC\",\"like_style\":\"Post_like_style__3Ig0d\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './Profile.module.css'\r\n\r\nconst StatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n            setStatus(props.status)}, [props.status]);\r\n\r\n    function myFunction() {\r\n        let popup = document.getElementById(\"myPopup\");\r\n        popup.classList.toggle(\"show\");\r\n    }\r\n\r\n    const activateEdit = () => {\r\n        setEditMode(true)\r\n\r\n    }\r\n\r\n    const deactivateEdit = () => {\r\n        setEditMode(false)\r\n        props.setStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (<>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:</b> <span onDoubleClick={activateEdit}>{props.status || 'У этого пользователя нет статуса :c'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEdit} type='text' autoFocus={true} value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusWithHook;","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport s from './Form.module.css';\r\nimport * as yup from \"yup\";\r\n\r\nconst ProfileDataForm = ({deactivateEdit, saveProfile, userPage}) => {\r\n\r\n\r\n    let formPaste = (fieldName)=>{\r\n        return <div className={s.inputGroup}>\r\n        <Field placeholder='Введите адрес' name={'contacts.'+fieldName} type='text' id={fieldName}/>\r\n        <label htmlFor={fieldName}>{fieldName}</label>\r\n            <div className={s.reqMark}></div>\r\n        <br></br>\r\n            </div>\r\n    }\r\n\r\n    const validationSchema = yup.object().shape({\r\n        aboutMe: yup.string().typeError('Должно быть строкой').required('Заполните поле'),\r\n        lookingForAJobDescription: yup.string().typeError('Должно быть строкой').required('Заполните поле')\r\n    })\r\n\r\n\r\n\r\n\r\n    return <Formik\r\n            initialValues={{\r\n                aboutMe: userPage.aboutMe,\r\n                lookingForAJob: true,\r\n                fullName: 'tffriend025',\r\n                lookingForAJobDescription: userPage.lookingForAJobDescription,\r\n                contacts: {\r\n                    facebook:userPage.contacts.facebook,\r\n                    github:  userPage.contacts.github,\r\n                    instagram: userPage.contacts.instagram,\r\n                    twitter: userPage.contacts.twitter,\r\n                    vk: userPage.contacts.vk,\r\n                    youtube:userPage.contacts.youtube\r\n\r\n                }\r\n            }}\r\n\r\n\r\n            onSubmit={(values) => {\r\n                console.log(values)\r\n                saveProfile(values).then(\r\n                deactivateEdit(false))}}\r\n                validationSchema={validationSchema}\r\n    >\r\n\r\n\r\n\r\n            {({values,errors, touched}) => (\r\n                <Form>\r\n                    <p className={s.contactsAlert}>Каждое поле обязательно к заполнению! </p>\r\n                    <div className={s.inputGroup}>\r\n                    <Field  name=\"aboutMe\" type=\"text\"/>\r\n                        {errors.aboutMe && touched.aboutMe ?\r\n                            <div className={s.validateAlert}>{errors.aboutMe}</div> : null }\r\n                    <label htmlFor=\"aboutMe\" > aboutMe: </label>\r\n                    <div className={s.reqMark}></div>\r\n                    <br></br>\r\n                </div>\r\n                    <div className={s.inputGroup}>\r\n                    <Field  name=\"lookingForAJobDescription\" type=\"text\"/>\r\n                        {errors.lookingForAJobDescription && touched.lookingForAJobDescription ?\r\n                            <div className={s.validateAlert}>{errors.lookingForAJobDescription}</div> : null }\r\n                    <label htmlFor=\"lookingForAJobDescription\" >Looking for a job: </label>\r\n                        <div className={s.reqMark}></div>\r\n                    <br></br>\r\n                    </div>\r\n                    <p className={s.contactsAlert}>Если вы введете что-то, кроме URL адреса, результат не сохранится! </p>\r\n                    <div className={s.content}>\r\n                        <div className={s.rightColumn}> {formPaste('facebook')}\r\n                            {formPaste('github')}\r\n                            {formPaste('instagram')}</div>\r\n                   <div className={s.leftColumn}>{formPaste('twitter')}\r\n                       {formPaste('vk')}\r\n                       {formPaste(\"youtube\")}</div>\r\n\r\n                    </div>\r\n                    <button type={\"submit\"} autoFocus='true'> Сохранить</button>\r\n                    <button className={s.secondButton} onClick={() => {deactivateEdit()}}> Отменить</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n}\r\n\r\nexport default ProfileDataForm\r\n","import React, {useState} from \"react\";\r\nimport s from './../Profile.module.css';\r\nimport userpng from '../../../assets/images/userpng.jpg'\r\nimport StatusWithHook from '../StatusHook'\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport Popup from \"../../Common/Popup/Popup\";\r\n\r\n\r\nconst ProfileInfo = ({saveProfile, userPage, setStatus, status, isOwner, saveAvatar}) => {\r\n\r\n    let [isActive, setActive] = useState(false);\r\n    if (!userPage) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarChanged = (e) => {\r\n        if (e.target.files.length) {\r\n            saveAvatar(e.target.files[0])\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.info}>\r\n            <div className={s.avatar1}>\r\n                <img src={userPage.photos.large || userpng} className={s.avatar}/>\r\n\r\n                {isOwner &&\r\n                <div className={s.avatarChanger}><input type={\"file\"} className={s.setPhotoHide} id='updateUserAvatar'\r\n                                                        onChange={onAvatarChanged}/>\r\n                    <label htmlFor=\"updateUserAvatar\" className={s.setPhoto}>Обновить фото</label></div>}\r\n                {isOwner && <div>\r\n                    <button className={s.editProfile} onClick={() => setActive(true)}>редактировать</button>\r\n                </div>}\r\n            </div>\r\n            <div className={s.article}>\r\n                <h1 className={s.Name}>{userPage.fullName} </h1>\r\n                {isOwner ? <div className={s.about}><StatusWithHook status={status} setStatus={setStatus}/></div> :\r\n                    <div className={s.about}><b>Status:</b> {status}</div>}\r\n                <Popup isActive={isActive} setActive={setActive}>  <ProfileDataForm userPage={userPage} saveProfile={saveProfile} deactivateEdit={setActive}/> </Popup>\r\n                    <ProfileData userPage={userPage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({userPage}) => {\r\n    return <>\r\n        <p className={s.about}> <b>About me:</b> {userPage.aboutMe ? userPage.aboutMe : 'я  просто ноль'}</p>\r\n        <p className={s.about}> <b>Looking for a\r\n            job:</b> {userPage.lookingForAJob ? userPage.lookingForAJobDescription : 'not looking'}\r\n        </p>\r\n        <p className={s.contacts}>{Object.keys(userPage.contacts).map(key => {\r\n                return <Contact contactTitle={key} contactValue={userPage.contacts[key]}/>\r\n            }\r\n        )}\r\n        </p>\r\n        <p className={s.about}> <b>ID:</b> {userPage.userId}\r\n        </p>\r\n    </>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div key={props.postId} className={s.post}>\r\n            <div className={s.post_picture}>\r\n                <img\r\n                    src=\"https://openclipart.org/image/800px/svg_to_png/27714/JazzyNico-Air-traffic-control-Navpoint-circle-4.png\"\r\n                    className={s.post_picture_size}/>\r\n            </div>\r\n            <div className={s.post1}>\r\n                {props.message}\r\n            </div>\r\n            <span>\r\n                <button type='button' onClick={() => props.remove(props.postId)}> удалить пост {props.id} </button>\r\n            </span>\r\n                <div className={s.likes}>\r\n\r\n                   < div className={s.like_style}>\r\n                             <img\r\n                            src=\"https://static.vecteezy.com/system/resources/previews/000/572/583/original/heart-icon-vector-illustration.jpg\"\r\n                            className={s.like_png_width}/>\r\n                   {props.value}</div>\r\n\r\n                </div>\r\n        </div>)\r\n        ;\r\n\r\n\r\n}\r\n\r\nexport default Post\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n    let postsElements = props.posts.map(p => (<Post remove={props.deletePost} postId={p.postId} message={p.message} value={p.likesCount}/>));\r\n\r\n    let addPost = (text) => {\r\n        props.addPostActionCreator(text);\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className={s.posts}>\r\n            <div className={s.input_posts}>\r\n                <div className={s.myposts}>\r\n                    Posts:\r\n                </div>\r\n                <div className={s.input}>\r\n                    <Formik\r\n                        initialValues={{\r\n                            postText: '',\r\n\r\n                        }}\r\n                        onSubmit={async (values, {resetForm}) => {\r\n                            if (values.postText != '') {\r\n                                addPost(values.postText)\r\n                                resetForm({})\r\n                            }\r\n                        }}\r\n                    >\r\n                        {({values}) => (\r\n                            <Form>\r\n                                <div className={s.input}>\r\n                                    <Field id={'postText'} className={s.input_text} name=\"postText\"\r\n                                           placeholder=\"Введите текст поста...\" type=\"text\"/>\r\n                                </div>\r\n                                <div className={s.input1}>\r\n                                    <button className={s.input_button} type={\"submit\"}> отправить</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.post}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, deletePost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass MyPostsContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n       return <MyPosts {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addPostActionCreator,deletePost})(MyPostsContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.uppic1}>\r\n                <img\r\n                    src='https://avatars.mds.yandex.net/get-zen_doc/100325/pub_5ae83b0c77d0e6504bce8117_5ae86dcac3321b1f23ef3b0c/scale_1200'\r\n                    className={s.uppic}/>\r\n            </div>\r\n           <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} userPage={props.userPage} status={props.status} setStatus={props.setStatus} saveAvatar={props.saveAvatar}/>\r\n            <MyPostsContainer  />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunk,\r\n    profileThunk,\r\n    saveAvatar,\r\n    saveProfile,\r\n    setUserProfile,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let {profileThunk, getStatusThunk} = this.props\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        profileThunk(userId);\r\n        getStatusThunk(userId);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Profile userPage={this.props.userPage}\r\n                     userId={this.userId}\r\n                     status={this.props.statusText}\r\n                     setStatus={this.props.updateStatusThunk}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     saveAvatar={this.props.saveAvatar}\r\n                     saveProfile={this.props.saveProfile}\r\n\r\n            />\r\n        </>\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userPage: state.profilePage.userPage,\r\n        statusText: state.profilePage.statusText,\r\n        authorizedUserId: state.auth.id,\r\n        updateProfileSuccess: state.profilePage.updateProfileSuccess\r\n    }\r\n};\r\n\r\n\r\nexport default compose(withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps,\r\n        {setUserProfile, profileThunk, getStatusThunk,updateStatusThunk,saveAvatar,saveProfile}))(ProfileContainer);\r\n"],"sourceRoot":""}